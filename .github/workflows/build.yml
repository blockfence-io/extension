name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version number'
        required: true

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set environment variable
        run: |
          echo "NODE_ENV=production" >> $GITHUB_ENV

      - name: Update manifest.json
        run: |
          sed -i.bak "s/\"version\": \".*\"/\"version\": \"$GITHUB_ACTION_VERSION\"/" src/manifest.json && rm src/manifest.json.bak
        env:
          GITHUB_ACTION_VERSION: ${{ github.event.inputs.version }}

      - name: Install
        run: |
            npm install

      - name: Build
        run: npm run build

      - name: Compress build artifacts
        uses: montudor/action-zip@v1
        with:
          args: "-r release.zip build/"

      - name: "Create release"
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              const response = await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: process.env.GITHUB_ACTION_VERSION,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });

              core.exportVariable('RELEASE_ID', response.data.id);
              core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
            } catch (error) {
              core.setFailed(error.message);
            }


      # - name: Create release
      #   uses: actions/create-release@v1
      #   id: create_release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.event.inputs.version }}
      #     release_name: Release ${{ github.event.inputs.version }}
      #     body: |
      #       This is the ${{ github.event.inputs.version }} release
      #     draft: false
      #     prerelease: false

      # - name: Upload release asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1.0.1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./release.zip
      #     asset_name: release.zip
      #     asset_content_type: application/zip
